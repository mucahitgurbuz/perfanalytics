{"version":3,"sources":["index.js"],"names":["window","perfAnalytic","appCode","apiUrl","performance","console","log","analytics","file","fcp","ttfb","domLoad","windowLoad","msToSeconds","ms","PerformanceObserver","resourceList","getEntries","forEach","resource","entryType","name","startTime","initiatorType","push","replace","location","href","type","value","responseEnd","handleObserverResource","observe","entryTypes","onload","timing","responseStart","navigationStart","domContentLoadedEventEnd","Date","getTime","document","addEventListener","visibilityState","fetch","method","headers","keepalive","body","JSON","stringify","then","res","json"],"mappings":";AAAAA,OAAOC,aAAe,SAACC,GAASC,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,wBAClCH,OAAOI,aACVC,QAAQC,IAAI,qDAEdN,OAAOO,UAAY,CACjBL,QAASA,EACTM,KAAM,GACNC,IAAK,EACLC,KAAM,EACNC,QAAS,EACTC,WAAY,GAGRC,IAAAA,EAAc,SAACC,GAAOA,OAAAA,EAAK,KAGI,oBAAxBC,oBAyBM,IAAIA,oBAAoB,SAACC,GACxCA,EAAaC,aAAaC,QAAQ,SAACC,IArBN,SAACA,GAEL,UAAvBA,EAASC,WACS,2BAAlBD,EAASE,OAETrB,OAAOO,UAAUE,IAAMI,EAAYM,EAASG,YAGrB,aAAvBH,EAASC,WACkB,mBAA3BD,EAASI,eACkB,UAA3BJ,EAASI,eAETvB,OAAOO,UAAUC,KAAKgB,KAAK,CACzBH,KAAMF,EAASE,KAAKI,QAAQzB,OAAO0B,SAASC,KAAM,IAClDC,KAAMT,EAASI,cACfM,MAAOhB,EAAYM,EAASW,eAO9BC,CAAuBZ,OAGlBa,QAAQ,CAAEC,WAAY,CAAC,QAAS,cA7BvC5B,QAAQC,IAAI,qDAkChBN,OAAOkC,OAAS,WACR9B,IAAAA,EAAcJ,OAAOI,YACrBG,EAAYP,OAAOO,UACzBA,EAAUG,KAAOG,EACfT,EAAY+B,OAAOC,cAAgBhC,EAAY+B,OAAOE,iBAExD9B,EAAUI,QAAUE,EAClBT,EAAY+B,OAAOG,yBACjBlC,EAAY+B,OAAOE,iBAEvB9B,EAAUK,WAAaC,GACrB,IAAI0B,MAAOC,UAAYpC,EAAY+B,OAAOE,iBAE5C9B,EAAUC,KAAKgB,KAAK,CAClBH,KAAM,WACNO,KAAM,WACNC,MAAOhB,EACLT,EAAY+B,OAAOL,YAAc1B,EAAY+B,OAAOE,oBAK1DI,SAASC,iBAAiB,mBAAoB,WACX,WAA7BD,SAASE,kBACXtC,QAAQC,IAAIN,OAAOO,WACnBqC,MAASzC,GAAAA,OAAAA,EAAmB,aAAA,CAC1B0C,OAAQ,OACRC,QAAS,CACwB,8BAAA,IACf,eAAA,mCAElBC,WAAW,EACXC,KAAMC,KAAKC,UAAUlD,OAAOO,aAE3B4C,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACC,GAAQ/C,OAAAA,QAAQC,IAAI8C","file":"index.js","sourceRoot":"..","sourcesContent":["window.perfAnalytic = (appCode, apiUrl = \"http://localhost:8080\") => {\n  if (!window.performance) {\n    console.log(\"Performance API is not supported on this browser.\");\n  }\n  window.analytics = {\n    appCode: appCode,\n    file: [],\n    fcp: 0,\n    ttfb: 0,\n    domLoad: 0,\n    windowLoad: 0,\n  };\n\n  const msToSeconds = (ms) => ms / 1000;\n\n  const startObserver = () => {\n    if (typeof PerformanceObserver === \"undefined\") {\n      console.log(\"This browser does not support PerformanceObserver\");\n      return;\n    }\n\n    const handleObserverResource = (resource) => {\n      if (\n        resource.entryType === \"paint\" &&\n        resource.name === \"first-contentful-paint\"\n      ) {\n        window.analytics.fcp = msToSeconds(resource.startTime);\n      }\n      if (\n        resource.entryType === \"resource\" &&\n        resource.initiatorType !== \"xmlhttprequest\" &&\n        resource.initiatorType !== \"fetch\"\n      ) {\n        window.analytics.file.push({\n          name: resource.name.replace(window.location.href, \"\"),\n          type: resource.initiatorType,\n          value: msToSeconds(resource.responseEnd),\n        });\n      }\n    };\n\n    const observer = new PerformanceObserver((resourceList) => {\n      resourceList.getEntries().forEach((resource) => {\n        handleObserverResource(resource);\n      });\n    });\n    observer.observe({ entryTypes: [\"paint\", \"resource\"] });\n  };\n\n  startObserver();\n\n  window.onload = () => {\n    const performance = window.performance;\n    const analytics = window.analytics;\n    analytics.ttfb = msToSeconds(\n      performance.timing.responseStart - performance.timing.navigationStart\n    );\n    analytics.domLoad = msToSeconds(\n      performance.timing.domContentLoadedEventEnd -\n        performance.timing.navigationStart\n    );\n    analytics.windowLoad = msToSeconds(\n      new Date().getTime() - performance.timing.navigationStart\n    );\n    analytics.file.push({\n      name: \"document\",\n      type: \"document\",\n      value: msToSeconds(\n        performance.timing.responseEnd - performance.timing.navigationStart\n      ),\n    });\n  };\n\n  document.addEventListener(\"visibilitychange\", function logData() {\n    if (document.visibilityState === \"hidden\") {\n      console.log(window.analytics);\n      fetch(`${apiUrl}/analytic`, {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n        keepalive: true,\n        body: JSON.stringify(window.analytics),\n      })\n        .then((res) => res.json())\n        .then((res) => console.log(res));\n    }\n  });\n};\n"]}